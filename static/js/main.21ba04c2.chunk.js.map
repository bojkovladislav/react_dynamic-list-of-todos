{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","types/Filter.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","visibleTodo","setVisibleTodo","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","setValue","setFilterBy","query","setQuery","onChange","e","target","value","placeholder","style","pointerEvents","length","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Filter","TodoModal","useState","user","setUser","userId","useEffect","getUser","userFromServer","href","email","name","App","visibleTodos","setVisibleTodos","ALL","filterBy","todosFromServer","filteredTodos","useMemo","filter","preparedQuery","trim","toLowerCase","filterByQuery","includes","ACTIVE","COMPLETED","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21ba04c2.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  visibleTodo: Todo | null;\n  setVisibleTodo: (currTodo: Todo) => void;\n}\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    visibleTodo,\n    setVisibleTodo,\n  },\n) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => {\n          const { id, title, completed } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={classNames(\n                { 'has-background-info-light': visibleTodo?.id === id },\n              )}\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed\n                && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-success': completed,\n                  'has-text-danger': !completed,\n                })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setVisibleTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(\n                      'far',\n                      (visibleTodo?.id === id\n                        ? 'fa-eye-slash'\n                        : 'fa-eye'\n                      ),\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\nimport { Filter } from '../../types/Filter';\n\ninterface Props {\n  setFilterBy: (value: Filter | string) => void;\n  setQuery: (query: string) => void;\n  query: string;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilterBy: setValue,\n  query, setQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => setValue(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query.length > 0\n            && (\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                aria-label=\"Clear Search Button\"\n                onClick={() => setQuery('')}\n              />\n            )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst BASE_URL\n  = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  const fullURL = `${BASE_URL + url}.json`;\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Filter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\n\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\nimport { getUser } from '../../api';\n\ninterface Props {\n  visibleTodo: Todo;\n  setVisibleTodo: (todo: Todo | null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({ visibleTodo, setVisibleTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const {\n    id, title, completed, userId,\n  } = visibleTodo;\n\n  useEffect(() => {\n    getUser(userId)\n      .then(userFromServer => {\n        setUser(userFromServer);\n      });\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {!user || !visibleTodo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"Close Medal\"\n              onClick={() => setVisibleTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/Filter';\n\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [visibleTodo, setVisibleTodo] = useState<Todo | null>(null);\n  const [filterBy, setFilterBy] = useState<Filter | string>(Filter.ALL);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setVisibleTodos(todosFromServer);\n      });\n  }, []);\n\n  const filteredTodos: Todo[] = useMemo(() => {\n    return visibleTodos.filter(({ title, completed }) => {\n      const preparedQuery = query.trim().toLowerCase();\n      const filterByQuery\n        = title.toLowerCase().includes(preparedQuery);\n\n      switch (filterBy) {\n        case Filter.ACTIVE:\n          return !completed && filterByQuery;\n\n        case Filter.COMPLETED:\n          return completed && filterByQuery;\n\n        default:\n          return filterByQuery;\n      }\n    });\n  }, [query, visibleTodos, filterBy]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilterBy={setFilterBy}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!visibleTodos.length ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  visibleTodo={visibleTodo}\n                  setVisibleTodo={setVisibleTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {visibleTodo && (\n        <TodoModal\n          visibleTodo={visibleTodo}\n          setVisibleTodo={setVisibleTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}